// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: query.sql

package db

import (
	"context"
	"time"
)

const createItem = `-- name: CreateItem :exec
INSERT INTO VMT_Items (ID, Title, Description, IsGood, CreatedAt) VALUES (?,?,?,?,?)
`

type CreateItemParams struct {
	ID          string    `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	Isgood      bool      `json:"isgood"`
	Createdat   time.Time `json:"createdat"`
}

func (q *Queries) CreateItem(ctx context.Context, arg CreateItemParams) error {
	_, err := q.db.ExecContext(ctx, createItem,
		arg.ID,
		arg.Title,
		arg.Description,
		arg.Isgood,
		arg.Createdat,
	)
	return err
}

const findItem = `-- name: FindItem :one
SELECT id, title, description, isgood, createdat FROM VMT_Items WHERE ID = ?
`

func (q *Queries) FindItem(ctx context.Context, id string) (VmtItem, error) {
	row := q.db.QueryRowContext(ctx, findItem, id)
	var i VmtItem
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.Isgood,
		&i.Createdat,
	)
	return i, err
}
